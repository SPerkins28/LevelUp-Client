[{"/Users/seanperkins/Desktop/LevelUp/level-up-client/src/index.tsx":"1","/Users/seanperkins/Desktop/LevelUp/level-up-client/src/reportWebVitals.ts":"2","/Users/seanperkins/Desktop/LevelUp/level-up-client/src/App.tsx":"3","/Users/seanperkins/Desktop/LevelUp/level-up-client/src/components/Home/Navbar.tsx":"4","/Users/seanperkins/Desktop/LevelUp/level-up-client/src/components/Home/Drawer.tsx":"5","/Users/seanperkins/Desktop/LevelUp/level-up-client/src/components/Home/SearchBar.tsx":"6","/Users/seanperkins/Desktop/LevelUp/level-up-client/src/components/Games/Games.tsx":"7","/Users/seanperkins/Desktop/LevelUp/level-up-client/src/components/Games/Modals/MoreInfo.tsx":"8","/Users/seanperkins/Desktop/LevelUp/level-up-client/src/components/Reviews/ReviewsByGame.tsx":"9","/Users/seanperkins/Desktop/LevelUp/level-up-client/src/components/Auth/LoginPopUp.tsx":"10","/Users/seanperkins/Desktop/LevelUp/level-up-client/src/components/Auth/SignUpPopUp.tsx":"11","/Users/seanperkins/Desktop/LevelUp/level-up-client/src/components/Reviews/Modals/ReviewCreate.tsx":"12","/Users/seanperkins/Desktop/LevelUp/level-up-client/src/components/Reviews/Modals/ReviewUpdate.tsx":"13","/Users/seanperkins/Desktop/LevelUp/level-up-client/src/components/Reviews/Modals/ReviewDelete.tsx":"14","/Users/seanperkins/Desktop/LevelUp/level-up-client/src/components/SideBarPages/WantToPlay.tsx":"15","/Users/seanperkins/Desktop/LevelUp/level-up-client/src/components/SideBarPages/AccountPage.tsx":"16","/Users/seanperkins/Desktop/LevelUp/level-up-client/src/components/SideBarPages/Library.tsx":"17","/Users/seanperkins/Desktop/LevelUp/level-up-client/src/components/SideBarPages/WantToPlayDelete.tsx":"18","/Users/seanperkins/Desktop/LevelUp/level-up-client/src/components/SideBarPages/LibraryDelete.tsx":"19"},{"size":500,"mtime":1609346171383,"results":"20","hashOfConfig":"21"},{"size":425,"mtime":1608409508268,"results":"22","hashOfConfig":"21"},{"size":2663,"mtime":1609438355164,"results":"23","hashOfConfig":"21"},{"size":3462,"mtime":1609386804272,"results":"24","hashOfConfig":"21"},{"size":3626,"mtime":1609358611221,"results":"25","hashOfConfig":"21"},{"size":6250,"mtime":1609341555611,"results":"26","hashOfConfig":"21"},{"size":2045,"mtime":1609384955959,"results":"27","hashOfConfig":"21"},{"size":3494,"mtime":1609385315884,"results":"28","hashOfConfig":"21"},{"size":7044,"mtime":1609292246752,"results":"29","hashOfConfig":"21"},{"size":3531,"mtime":1609386869946,"results":"30","hashOfConfig":"21"},{"size":4592,"mtime":1609386851570,"results":"31","hashOfConfig":"21"},{"size":4932,"mtime":1609291481391,"results":"32","hashOfConfig":"21"},{"size":4927,"mtime":1609290119935,"results":"33","hashOfConfig":"21"},{"size":2695,"mtime":1609390043920,"results":"34","hashOfConfig":"21"},{"size":6924,"mtime":1609436477772,"results":"35","hashOfConfig":"21"},{"size":227,"mtime":1609356486467,"results":"36","hashOfConfig":"21"},{"size":6913,"mtime":1609444611147,"results":"37","hashOfConfig":"21"},{"size":2904,"mtime":1609426619237,"results":"38","hashOfConfig":"21"},{"size":2903,"mtime":1609440339356,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"3cqj9g",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/seanperkins/Desktop/LevelUp/level-up-client/src/index.tsx",[],["80","81"],"/Users/seanperkins/Desktop/LevelUp/level-up-client/src/reportWebVitals.ts",[],"/Users/seanperkins/Desktop/LevelUp/level-up-client/src/App.tsx",[],"/Users/seanperkins/Desktop/LevelUp/level-up-client/src/components/Home/Navbar.tsx",[],"/Users/seanperkins/Desktop/LevelUp/level-up-client/src/components/Home/Drawer.tsx",[],"/Users/seanperkins/Desktop/LevelUp/level-up-client/src/components/Home/SearchBar.tsx",[],"/Users/seanperkins/Desktop/LevelUp/level-up-client/src/components/Games/Games.tsx",[],"/Users/seanperkins/Desktop/LevelUp/level-up-client/src/components/Games/Modals/MoreInfo.tsx",[],"/Users/seanperkins/Desktop/LevelUp/level-up-client/src/components/Reviews/ReviewsByGame.tsx",[],"/Users/seanperkins/Desktop/LevelUp/level-up-client/src/components/Auth/LoginPopUp.tsx",[],"/Users/seanperkins/Desktop/LevelUp/level-up-client/src/components/Auth/SignUpPopUp.tsx",[],"/Users/seanperkins/Desktop/LevelUp/level-up-client/src/components/Reviews/Modals/ReviewCreate.tsx",[],"/Users/seanperkins/Desktop/LevelUp/level-up-client/src/components/Reviews/Modals/ReviewUpdate.tsx",[],"/Users/seanperkins/Desktop/LevelUp/level-up-client/src/components/Reviews/Modals/ReviewDelete.tsx",[],"/Users/seanperkins/Desktop/LevelUp/level-up-client/src/components/SideBarPages/WantToPlay.tsx",["82"],"import React, { Component } from \"react\";\nimport { createStyles, withStyles, WithStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport WantToPlayDelete from \"./WantToPlayDelete\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport \"./WantToPlay.css\";\n\nconst styles = (theme: any) =>\n  createStyles({\n    root: {\n      maxWidth: 345,\n    },\n    media: {\n      height: 275,\n      width: 300,\n    },\n    rootProgress: {\n      display: \"flex\",\n      \"& > * + *\": {\n        marginLeft: theme.spacing(2),\n      },\n    },\n  });\n\ninterface Props extends WithStyles<typeof styles> {\n  token: string | null;\n}\n\ninterface State {\n  userWantToPlay: any;\n  openSnackBar: boolean;\n  responseMessage: string;\n  severity: \"success\" | \"error\";\n  openRemoveWTP: boolean;\n  userWTP: any;\n}\n\nclass WantToPlay extends Component<Props, State> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      userWantToPlay: [],\n      openSnackBar: false,\n      responseMessage: \"\",\n      severity: \"success\",\n      openRemoveWTP: false,\n      userWTP: {},\n    };\n  }\n\n  handleOpenSnackBar = (severity: \"success\" | \"error\", message: string) => {\n    this.setState({\n      severity: severity,\n      responseMessage: message,\n      openSnackBar: true,\n    });\n  };\n\n  handleCloseSnackBar = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    this.setState({\n      openSnackBar: false,\n    });\n  };\n\n  fetchWTP = () => {\n    const userId = localStorage.getItem(\"userId\");\n    fetch(`http://localhost:4321/wanttoplay/${userId}`, {\n      method: \"GET\",\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n        Authorization: `${this.props.token}`,\n      }),\n    })\n      .then((res: any) => res.json())\n      .then((userWantToPlay: any) => {\n        if (!userWantToPlay) {\n          this.handleOpenSnackBar(\"error\", userWantToPlay.message);\n        } else {\n          this.setState({\n            userWantToPlay: userWantToPlay.userWantToPlay,\n          });\n          const message = userWantToPlay.message;\n          this.handleOpenSnackBar(\"success\", message);\n        }\n        console.log(userWantToPlay.userWantToPlay);\n      });\n  };\n\n  updateWTP = (event: any, game: any) => {\n    event.preventDefault();\n    const wtpId = game.id;\n    const played = game.played;\n    console.log(wtpId);\n    fetch(`http://localhost:4321/wanttoplay/${wtpId}`, {\n      method: \"PUT\",\n      body: JSON.stringify({ played: !played }),\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n        Authorization: `${this.props.token}`,\n      }),\n    })\n      .then((response) => response.json())\n      .then((userWantToPlay) => {\n        if (!userWantToPlay.updated) {\n          this.handleOpenSnackBar(\"error\", userWantToPlay.message);\n        } else {\n          this.setState({\n            userWantToPlay: userWantToPlay.userWantToPlay,\n          });\n          const message = userWantToPlay.message;\n          this.handleOpenSnackBar(\"success\", message);\n        }\n      });\n    this.fetchWTP();\n  };\n\n  componentDidMount = () => {\n    this.fetchWTP();\n  };\n\n  render() {\n    console.log(this.state.userWantToPlay);\n    const { classes } = this.props;\n    return (\n      <>\n        <Grid container justify=\"space-evenly\">\n          {setTimeout(this.state.userWantToPlay.length, 800) &&\n            this.state.userWantToPlay.map((userWTP: any, index: number) => {\n              return (\n                <Grid item xs={12} sm={6} md={3} id=\"wtpresults\" key={index}>\n                  <Card className={classes.root}>\n                    <CardActionArea>\n                      <CardMedia\n                        className={classes.media}\n                        image={userWTP.gameImg}\n                        title={\"Game Image\"}\n                      />\n                      <CardContent>\n                        <Typography\n                          variant=\"h6\"\n                          component=\"h2\"\n                          id=\"wtpGameName\"\n                        >\n                          <strong>{userWTP.title}</strong>\n                        </Typography>\n                      </CardContent>\n                    </CardActionArea>\n                    <CardActions id=\"wtpActions\">\n                      <Button\n                        fullWidth={true}\n                        id=\"played\"\n                        onClick={(event) => this.updateWTP(event, userWTP)}\n                      >\n                        <strong>\n                          {userWTP.played ? (\n                            <span id=\"playedIndicator\">\n                              Played <CheckIcon id=\"check\" />\n                            </span>\n                          ) : (\n                            \"Not Played\"\n                          )}\n                        </strong>\n                      </Button>\n                      <Button\n                        fullWidth={true}\n                        onClick={() =>\n                          this.setState({\n                            openRemoveWTP: true,\n                            userWTP: userWTP,\n                          })\n                        }\n                        id=\"remove\"\n                      >\n                        <strong>Remove from list</strong>\n                      </Button>\n                    </CardActions>\n                  </Card>\n                </Grid>\n              );\n            })}\n        </Grid>\n        {this.state.openSnackBar && (\n          <Snackbar\n            open={this.state.openSnackBar}\n            autoHideDuration={4000}\n            onClose={this.handleCloseSnackBar}\n          >\n            <Alert\n              onClose={this.handleCloseSnackBar}\n              elevation={6}\n              severity={this.state.severity}\n              variant=\"filled\"\n            >\n              {this.state.responseMessage}\n            </Alert>\n          </Snackbar>\n        )}\n        {this.state.openRemoveWTP && (\n          <WantToPlayDelete\n            handleOpenSnackBar={this.handleOpenSnackBar}\n            token={this.props.token}\n            open={this.state.openRemoveWTP}\n            onClose={() => this.setState({ openRemoveWTP: false })}\n            game={this.state.userWTP}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles)(WantToPlay);\n","/Users/seanperkins/Desktop/LevelUp/level-up-client/src/components/SideBarPages/AccountPage.tsx",[],"/Users/seanperkins/Desktop/LevelUp/level-up-client/src/components/SideBarPages/Library.tsx",["83"],"/Users/seanperkins/Desktop/LevelUp/level-up-client/src/components/SideBarPages/WantToPlayDelete.tsx",[],"/Users/seanperkins/Desktop/LevelUp/level-up-client/src/components/SideBarPages/LibraryDelete.tsx",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":15,"column":8,"nodeType":"90","messageId":"91","endLine":15,"endColumn":24},{"ruleId":"88","severity":1,"message":"89","line":15,"column":8,"nodeType":"90","messageId":"91","endLine":15,"endColumn":24},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"@typescript-eslint/no-unused-vars","'CircularProgress' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]